-- local _cardres = {
-- 	10,11,12,13, -- 2
-- 	20,21,22,23, --3
-- 	30,31,32,33, --4
-- 	40,41,42,43, --5
-- 	50,51,52,53, --6
-- 	60,61,62,63, --7
-- 	70,71,72,73, --8
-- 	80,81,82,83, --9
-- 	90,91,92,93, --10
-- 	100,101,102,103, --J
-- 	110,111,112,113, --Q
-- 	120,121,122,123, --K
-- 	130,131,132,133, -- A
-- 	140,150} --小，大王

-- logic.ct_set = 6 三条
-- logic.ct_flushstraight = 5 同花顺
-- logic.ct_flush = 4 同花
-- logic.ct_straight = 3 顺子
-- logic.ct_pair = 2 对子
-- logic.ct_highcard = 1 单张

-- 150大王 = 红桃2 方块0
-- 140小王 = 黑桃3 梅花1

-- logic.ct_all_flush = 11 三清 手上三道牌型都是同花
-- logic.ct_all_black = 10 全黑 9张牌全部由黑桃和梅花组成的牌型
-- logic.ct_all_red = 9 全红 9张牌全部由红桃和方块组成的牌型
-- logic.ct_all_flushstraight = 8 双顺清 手上有两道为同花顺的牌型
-- logic.ct_two_flushstraight = 7 三顺清 手上三道牌全部为同花顺的牌型
-- logic.ct_two_set = 6 双三条 手上中道和尾道都为三条的牌型
-- logic.ct_all_set = 5 全三条 手中三道牌都为三条的牌型
-- logic.ct_four_same = 4 四个头 手上牌里有四张一张牌型(特殊)
-- logic.ct_9_straight = 3 连顺 9张牌必须配成连贯的顺子（顺序打乱则不算连顺奖励）
-- logic.ct_9_flushstraight = 2 清连顺 9张牌组成连贯的顺子，并且9张牌只有一种花色
-- logic.ct_all_win = 1 通关 某玩家的三道牌，每一道都比场上任何玩家大。

-- logic.ct_all_flush = 11
-- logic.ct_all_black = 10
-- logic.ct_all_red = 9
-- logic.ct_all_flushstraight = 8
-- logic.ct_two_flushstraight = 7
-- logic.ct_two_set = 6
-- logic.ct_all_set = 5
-- logic.ct_four_same = 4
-- logic.ct_9_straight = 3
-- logic.ct_9_flushstraight = 2
-- logic.ct_all_win = 1
local test = {
      {cards = {70,90,100,91,81,71,113,123,133}, 
      ct = {
            -- [9] = 1,
            -- [11] = 1,
            -- [2] = 1,
            [7] = 1,
            -- [3] = 1,
            [11] = 1,
      }},
      {cards = {132, 12, 22, 32, 42, 52, 62, 72, 82}, 
      ct = {
            [9] = 1,
            [11] = 1,
            [2] = 1,
            [7] = 1,
            [3] = 1,
            [8] = 1,
      }},
      {cards = {73, 61, 53, 101, 91, 81, 140, 123, 113}, 
      ct = {
            [7] = 1,
            [10] = 1,
            [3] = 1,
      }},
      {cards = {113, 93, 40, 90, 91, 92, 110, 111, 112}, 
      ct = {
            [6] = 1,
            [4] = 2,
      }},
      {cards = {61, 62, 50, 133, 101, 92, 131, 132, 150}, 
      ct = {
      }},
      {cards = {20, 31, 43, 51, 63, 70, 90, 101, 113}, 
      ct = {
      }},
      {cards = {21, 23, 20, 81, 80, 83, 150, 140, 101}, 
      ct = {
            [5] = 1,
            [6] = 1,
      }},
      {cards = {33, 43, 53, 63, 73, 83, 140, 103, 113}, 
      ct = {
            [3] = 1,
            [2] = 1,
            [11] = 1,
            [7] = 1,
            [8] = 1,
            [10] = 1,
      }},
      
      {cards = {101, 81, 140, 110, 70, 10, 150, 93, 83},
      ct = {
            [11] = 1
      }},
      {cards = {130, 120, 110, 102, 82, 42, 133, 103, 93}, 
      ct = {
            [11] = 1
      }},
}

return test

